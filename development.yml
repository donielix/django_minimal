version: "3.9"
name: "django_minimal"
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  celeryworker:
    image: django_minimal/web_service
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    command: celery -A root worker -l INFO
    restart: unless-stopped

  web:
    build:
      dockerfile: development-dockerfile
      context: .
    image: django_minimal/web_service
    command: >
      bash -c "python manage.py makemigrations &&
               python manage.py migrate &&
               echo \"from django.contrib.auth.models import User; \\
               User.objects.create_superuser('admin', 'admin@example.com', 'admin')\" | python manage.py shell
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      celeryworker:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_db:
